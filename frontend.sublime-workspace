{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"commen",
				"commentEdit"
			],
			[
				"course",
				"coursePageState"
			],
			[
				"alert",
				"alertMsg"
			],
			[
				"user",
				"userID"
			],
			[
				"js",
				"jsonParser"
			],
			[
				"get",
				"getCourse"
			],
			[
				"font",
				"font-weight-bold"
			],
			[
				"time",
				"timeCreated"
			],
			[
				"float-",
				"float-right"
			],
			[
				"refre",
				"refreshCourses"
			],
			[
				"map",
				"mapDispatchToProps〔function〕"
			],
			[
				"app",
				"applySubmitButton"
			],
			[
				"aler",
				"alertLogin"
			],
			[
				"component",
				"componentDidMount"
			],
			[
				"sear",
				"searchGroup"
			],
			[
				"Reg",
				"RegisterPage"
			],
			[
				"trans",
				"transform"
			],
			[
				"break",
				"break-word"
			],
			[
				"userSc",
				"userScoresGiven"
			],
			[
				"comment",
				"comment_id"
			],
			[
				"invalid",
				"invalidLogin"
			],
			[
				"log",
				"loggedIn"
			],
			[
				"setIn",
				"setInvalidLog"
			],
			[
				"coursePage",
				"coursePageXML"
			],
			[
				"card",
				"cardsViewState"
			],
			[
				"set",
				"setInvalidLog"
			],
			[
				"in",
				"invalidLog"
			],
			[
				"l",
				"logInOrOut"
			],
			[
				"fet",
				"fetchFromAPI"
			],
			[
				"res",
				"resType"
			],
			[
				"filter",
				"filterState"
			],
			[
				"compl",
				"completeFetch"
			],
			[
				"fetch",
				"fetchesInProgress"
			],
			[
				"Course",
				"CourseContainer〔function〕"
			],
			[
				"Cou",
				"CourseWrapper〔function〕"
			],
			[
				"add",
				"addUserCourseScore"
			],
			[
				"Star",
				"StarRating"
			],
			[
				"courses",
				"coursesXSLT〔variable〕"
			],
			[
				"React",
				"ReactDOM"
			],
			[
				"jq",
				"jqueryTest"
			],
			[
				"clear",
				"clearSearchBar"
			],
			[
				"getElem",
				"getElementById〔function〕"
			],
			[
				"p",
				"p-2"
			],
			[
				"fun",
				"function〔keyword〕"
			],
			[
				"bod",
				"bodyParser〔variable〕"
			],
			[
				"class",
				"className"
			],
			[
				"acti",
				"activeFilter"
			],
			[
				"ac",
				"actionCreators"
			],
			[
				"SQL",
				"SQLquery〔variable〕"
			],
			[
				"showDep",
				"showDepartmentsHandler〔variable〕"
			],
			[
				"showDe",
				"showDepartmentsHandler〔variable〕"
			],
			[
				"with",
				"withStyles"
			],
			[
				"Expan",
				"ExpansionPanelDetails〔variable〕"
			],
			[
				"ExpansionPa",
				"ExpansionPanelDetails〔variable〕"
			],
			[
				"Expandmo",
				"ExpandMoreIcon"
			],
			[
				"Ex",
				"ExpansionPanelSummary"
			],
			[
				"Expansion",
				"ExpansionPanelSummary〔variable〕"
			],
			[
				"Expa",
				"ExpansionPanelSummary〔variable〕"
			],
			[
				"remoe",
				"removeFilterHandler〔variable〕"
			],
			[
				"getElement",
				"getElementsByTagName〔function〕"
			],
			[
				"coursesXS",
				"coursesXSLTFetched"
			],
			[
				"coursesXs",
				"coursesXSLTFetched"
			],
			[
				"applic",
				"applicationIntialState"
			],
			[
				"depar",
				"departmentsInitialState"
			],
			[
				"space",
				"space-around"
			],
			[
				"body",
				"bodyParser"
			],
			[
				"tag",
				"tagcontent"
			],
			[
				"padd",
				"padding"
			],
			[
				"flex",
				"flex-flow"
			],
			[
				"result",
				"resultDocument"
			],
			[
				"http",
				"XMLHttpRequest\t() XMLHttpRequest"
			],
			[
				"read",
				"readyState\t: unsigned short FileReader"
			],
			[
				"coure",
				"courses"
			],
			[
				"readaste",
				"readAsText\t( blob: Blob, label?: DOMString ): void FileReader"
			],
			[
				"create",
				"createElement\t( localName: DOMString ): Element Document"
			],
			[
				"align",
				"alignItems\t = 'flex-start' Style CSS"
			],
			[
				"alig",
				"alignContent\t = 'center' Style CSS"
			],
			[
				"Card",
				"CardHeader"
			],
			[
				"paddi",
				"padding-right"
			],
			[
				"fle",
				"flex-end"
			],
			[
				"space-",
				"space-between"
			],
			[
				"temp",
				"grid-template-rows"
			],
			[
				"grid-templ",
				"grid-template-columns"
			],
			[
				"cards",
				"cardsByID"
			],
			[
				"GET",
				"GET_COURSES_SUCCESS"
			],
			[
				"Cards",
				"CardsContainer"
			],
			[
				"props",
				"props\tReact: this.props"
			],
			[
				"onClick",
				"onClickKey"
			],
			[
				"load",
				"loadScreenWhileLoading"
			],
			[
				"loadScreen",
				"loadScreen"
			],
			[
				"getelem",
				"getElementById\t( elementId: DOMString ): Element Document"
			],
			[
				"elemen",
				"getElementById\t( elementId: DOMString ): Element Document"
			],
			[
				"id",
				"id\t: DOMString Element"
			],
			[
				"document",
				"documentElement\t: Element Document"
			],
			[
				"grid-tem",
				"grid-template-columns"
			],
			[
				"wid",
				"width\t = 'auto' Style CSS"
			],
			[
				"eleme",
				"getElementById\t( elementId: DOMString ): Element Document"
			],
			[
				"element",
				"cssElementMap\t: DOMElementMap Document"
			],
			[
				"max",
				"max-width"
			],
			[
				"fl",
				"flex-end"
			],
			[
				"align-",
				"align-self"
			],
			[
				"padding",
				"padding-top"
			],
			[
				"fe",
				"flex-start"
			],
			[
				"cons",
				"console_log"
			],
			[
				"st",
				"flex-start"
			],
			[
				"back",
				"background-color"
			],
			[
				"d",
				"display"
			],
			[
				"console",
				"console_log"
			],
			[
				"tran",
				"translateX()"
			],
			[
				"translate",
				"translateY()"
			],
			[
				"flex-",
				"flex-basis"
			],
			[
				"text",
				"text-align"
			],
			[
				"radi",
				"border-radius"
			],
			[
				"search",
				"SearchBar"
			],
			[
				"grid",
				"grid-template-columns"
			],
			[
				"column",
				"column-count"
			],
			[
				"paddin",
				"padding-bottom"
			],
			[
				"pos",
				"position"
			],
			[
				"word",
				"word-wrap"
			],
			[
				"grid-auto",
				"grid-auto-columns"
			],
			[
				"gird-col",
				"grid-template-columns"
			],
			[
				"bacground",
				"background-color"
			],
			[
				"background",
				"background-color"
			],
			[
				"border-",
				"border-color"
			],
			[
				"getElemen",
				"getElementById\t( elementId: DOMString ): Element Document"
			],
			[
				"return",
				"returnstring"
			],
			[
				"lo",
				"location"
			],
			[
				"con",
				"contestant_id\t(competing_in Col)"
			]
		]
	},
	"buffers":
	[
		{
			"file": "/D/Programming/Projekt/ratemycourse/backend/src/public/coursepage.xsl",
			"settings":
			{
				"buffer_size": 5438,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "src/enhancers/InjectAddCommentsComponent.js",
			"settings":
			{
				"buffer_size": 949,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "src/enhancers/InjectCommentEditButtons.js",
			"settings":
			{
				"buffer_size": 1552,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/D/Programming/Projekt/ratemycourse/backend/src/public/courselist.xsl",
			"settings":
			{
				"buffer_size": 1981,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "src/components/CardsView.js",
			"settings":
			{
				"buffer_size": 822,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "src/containers/CoursePage.js",
			"settings":
			{
				"buffer_size": 4192,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"contents": "import { combineReducers } from 'redux';\nimport LoadingGroup from '../helperFunctions/LoadingGroup';\n\nconst loadingInitialState = {\n  loadingGroup: new LoadingGroup('first'),\n};\n\nconst loadingReducer = (state = loadingInitialState, action = {}) => {\n  switch (action.type) {\n  case 'GET_COURSE_REQUEST':\n    return {\n      ...state,\n      loadingGroup: state.loadingGroup.startFetch(),\n    };\n\n  case 'GET_COURSE_SUCCESS':\n    return {\n      ...state,\n      loadingGroup: state.loadingGroup.completeFetch(),\n    };\n\n  case 'GET_COURSE_FAILURE':\n    return {\n      ...state,\n      loadingGroup: state.loadingGroup.completeFetch(),\n    };\n\n  case 'GET_SEARCH_REQUEST':\n    return {\n      ...state,\n      loadingGroup: state.loadingGroup.startFetch(),\n    };\n\n  case 'GET_SEARCH_SUCCESS':\n    return {\n      ...state,\n      loadingGroup: state.loadingGroup.completeFetch(),\n    };\n\n  case 'GET_SEARCH_FAILURE':\n    return {\n      ...state,\n      loadingGroup: state.loadingGroup.completeFetch(),\n    };\n\n case 'GET_INITDATA_REQUEST':\n    return {\n      ...state,\n      loadingGroup: state.loadingGroup.startFetch(),\n    };\n\n  case 'GET_INITDATA_SUCCESS':\n    return {\n      ...state,\n      loadingGroup: state.loadingGroup.completeFetch(),\n    };\n\n  case 'GET_INITDATA_FAILURE':\n    return {\n      ...state,\n      loadingGroup: state.loadingGroup.completeFetch(),\n    };\n\n  case 'VALIDATE_USER_REQUEST':\n    return {\n      ...state,\n      loadingGroup: state.loadingGroup.startFetch(),\n    };\n\n  case 'VALIDATE_USER_SUCCESS':\n    return {\n      ...state,\n      loadingGroup: state.loadingGroup.completeFetch(),\n    };\n\n  case 'VALIDATE_USER_FAILURE':\n    return {\n      ...state,\n      loadingGroup: state.loadingGroup.completeFetch(),\n    };\n\n  case 'SUBMIT_SCORE_REQUEST':\n    return {\n      ...state,\n      loadingGroup: state.loadingGroup.startFetch(),\n    };\n\n  case 'SUBMIT_SCORE_SUCCESS':\n    return {\n      ...state,\n      loadingGroup: state.loadingGroup.completeFetch(),\n    };\n\n  case 'SUBMIT_SCORE_FAILURE':\n    return {\n      ...state,\n      loadingGroup: state.loadingGroup.completeFetch(),\n    };\n\n  case 'REGISTER_USER_REQUEST':\n    return {\n      ...state,\n      loadingGroup: state.loadingGroup.startFetch(),\n    };\n\n  case 'REGISTER_USER_SUCCESS':\n    return {\n      ...state,\n      loadingGroup: state.loadingGroup.completeFetch(),\n    };\n\n  case 'REGISTER_USER_FAILURE':\n    return {\n      ...state,\n      loadingGroup: state.loadingGroup.completeFetch(),\n    };\n\n  case 'SUBMIT_COMMENT_REQUEST':\n    return {\n      ...state,\n      loadingGroup: state.loadingGroup.startFetch(),\n    };\n\n  case 'SUBMIT_COMMENT_SUCCESS':\n    return {\n      ...state,\n      loadingGroup: state.loadingGroup.completeFetch(),\n    };\n\n  case 'SUBMIT_COMMENT_FAILURE':\n    return {\n      ...state,\n      loadingGroup: state.loadingGroup.completeFetch(),\n    };\n\n  default:\n    return state;\n  }\n};\n\nconst errorInitialState = {\n  error: null,\n};\n\nconst errorReducer = (state = errorInitialState, action = {}) => {\n  switch (action.type) {\n  case 'GET_COURSE_FAILURE':\n    return {\n      ...state,\n      error: action.error,\n    };\n\n  case 'GET_SEARCH_FAILURE':\n    return {\n      ...state,\n      error: action.error,\n    };\n\n  case 'GET_INITDATA_FAILURE':\n    return {\n      ...state,\n      error: action.error,\n    };\n\n  case 'VALIDATE_USER_FAILURE':\n    return {\n      ...state,\n      error: action.error,\n      loadingGroup: state.loadingGroup.completeFetch(),\n    };\n\n    case 'REGISTER_USER_FAILURE':\n    return {\n      ...state,\n      error: action.error,\n    };\n\n  case 'SUBMIT_SCORE_FAILURE':\n    return {\n      ...state,\n      error: action.error,\n    };\n\n  case 'SUBMIT_COMMENT_FAILURE':\n    return {\n      ...state,\n      error: action.error,\n    };\n\n  default:\n    return state;\n  }\n};\n\nconst coursePageInitialState = {\n  loadingGroup: new LoadingGroup('first'),\n  coursePage: null,\n  commentEdit: false,\n  error: null,\n};\n\nconst coursePageReducer = (state = coursePageInitialState, action = {}) => {\n  switch (action.type) {\n  case 'GET_COURSE_REQUEST':\n    return {\n      ...state,\n      loadingGroup: state.loadingGroup.startFetch(),\n    };\n\n  case 'GET_COURSE_SUCCESS':\n    return {\n      ...state,\n      coursePage: action.result,\n      loadingGroup: state.loadingGroup.completeFetch(),\n    };\n\n  case 'GET_COURSE_FAILURE':\n    return {\n      ...state,\n      error: action.error,\n      loadingGroup: state.loadingGroup.completeFetch(),\n    };\n\n  case 'SET_COMMENT_EDIT':\n    return {\n      ...state,\n      commentEdit: action.result,\n    };\n\n\n  default:\n    return state;\n  }\n};\n\nconst cardsViewInitialState = {\n  loadingGroup: new LoadingGroup('first'),\n  courseList: '<courses>No search made...</courses>',\n  courseListXSL: null,\n  error: null,\n};\n\nconst cardsViewReducer = (state = cardsViewInitialState, action = {}) => {\n  switch (action.type) {\n  case 'GET_SEARCH_REQUEST':\n    return {\n      ...state,\n      loadingGroup: state.loadingGroup.startFetch(),\n    };\n\n  case 'GET_SEARCH_SUCCESS':\n    return {\n      ...state,\n      courseList: action.result,\n      loadingGroup: state.loadingGroup.completeFetch(),\n    };\n\n  case 'GET_SEARCH_FAILURE':\n    return {\n      ...state,\n      error: action.error,\n      loadingGroup: state.loadingGroup.completeFetch(),\n    };\n\n  case 'GET_INITDATA_REQUEST':\n    return {\n      ...state,\n      loadingGroup: state.loadingGroup.startFetch(),\n    };\n\n  case 'GET_INITDATA_SUCCESS':\n    return {\n      ...state,\n      courseList: action.result.courseList,\n      courseListXSL: action.result.courseListXSL,\n      loadingGroup: state.loadingGroup.completeFetch(),\n    };\n\n  case 'GET_INITDATA_FAILURE':\n    return {\n      ...state,\n      error: action.error,\n      loadingGroup: state.loadingGroup.completeFetch(),\n    };\n\n  default:\n    return state;\n  }\n};\n\nconst filterInitialState = {\n  loadingGroup: new LoadingGroup('first'),\n  departments: [],\n  visibleDepartments: [],\n  activeFilter: [],\n  inactiveFilter: [],\n  error: null,\n};\n\nconst filterReducer = (state = filterInitialState, action = {}) => {\n  switch (action.type) {\n  case 'ADD_FILTER':\n    return {\n      ...state,\n      activeFilter: [...state.activeFilter, action.result],\n      inactiveFilter: state.inactiveFilter.filter((item) => item !== action.result),\n    };\n\n  case 'REMOVE_FILTER':\n    return {\n      ...state,\n      activeFilter: state.activeFilter.filter((item) => item !== action.result),\n      inactiveFilter: [...state.inactiveFilter, action.result],\n    };\n\n  case 'GET_INITDATA_REQUEST':\n    return {\n      ...state,\n      loadingGroup: state.loadingGroup.startFetch(),\n    };\n\n  case 'GET_INITDATA_SUCCESS':\n    return {\n      ...state,\n      departments: action.result.departments,\n      activeFilter: action.result.activeFilter,\n      inactiveFilter: action.result.inactiveFilter,\n      loadingGroup: state.loadingGroup.completeFetch(),\n    };\n\n  case 'GET_INITDATA_FAILURE':\n    return {\n      ...state,\n      error: action.error,\n      loadingGroup: state.loadingGroup.completeFetch(),\n    };\n\n  case 'SET_DEP_VISIBLE':\n    return {\n      ...state,\n      visibleDepartments: action.result,\n    };\n\n  default:\n    return state;\n  }\n};\n\nconst userInitialState = {\n  loadingGroup: new LoadingGroup('first'),\n  loggedIn: false,\n  invalidLogin: false,\n  currentUserData: {\n    userId: null,\n    userName: null,\n    userEmail: null,\n    userScoresGiven: [],\n    userComments: [],\n  },\n  error: null,\n};\n\nconst userReducer = (state = userInitialState, action = {}) => {\n  switch (action.type) {\n  case 'VALIDATE_USER_REQUEST':\n    return {\n      ...state,\n      loadingGroup: state.loadingGroup.startFetch(),\n    };\n\n  case 'VALIDATE_USER_SUCCESS':\n    return {\n      ...state,\n      loggedIn: action.result.reply,\n      invalidLogin: !action.result.reply,\n      currentUserData: action.result.data,\n      loadingGroup: state.loadingGroup.completeFetch(),\n    };\n\n  case 'VALIDATE_USER_FAILURE':\n    return {\n      ...state,\n      error: action.error,\n      loadingGroup: state.loadingGroup.completeFetch(),\n    };\n\n  case 'SUBMIT_SCORE_REQUEST':\n    return {\n      ...state,\n      loadingGroup: state.loadingGroup.startFetch(),\n    };\n\n  case 'SUBMIT_SCORE_SUCCESS':\n    return {\n      ...state,\n      currentUserData: {...state.currentUserData,\n        userScoresGiven: {...state.currentUserData.userScoresGiven, [action.result.courseCode]: action.result.userScore } },\n      loadingGroup: state.loadingGroup.completeFetch(),\n    };\n\n  case 'SUBMIT_SCORE_FAILURE':\n    return {\n      ...state,\n      error: action.error,\n      loadingGroup: state.loadingGroup.completeFetch(),\n    };\n\n  case 'SUBMIT_COMMENT_REQUEST':\n    return {\n      ...state,\n      loadingGroup: state.loadingGroup.startFetch(),\n    };\n\n  case 'SUBMIT_COMMENT_SUCCESS':\n    return {\n      ...state,\n      currentUserData: {...state.currentUserData,\n        userComments: [...state.currentUserData.userComments, action.result.commentId] },\n      loadingGroup: state.loadingGroup.completeFetch(),\n    };\n\n  case 'SUBMIT_COMMENT_FAILURE':\n    return {\n      ...state,\n      error: action.error,\n      loadingGroup: state.loadingGroup.completeFetch(),\n    };\n\n  case 'REGISTER_USER_REQUEST':\n    return {\n      ...state,\n      loadingGroup: state.loadingGroup.startFetch(),\n    };\n\n  case 'REGISTER_USER_SUCCESS':\n    return {\n      ...state,\n      loggedIn: action.result.reply,\n      invalidLogin: !action.result.reply,\n      currentUserData: action.result.reply ? (action.result.data) : (state.currentUserData),\n      error: action.result.error,\n      loadingGroup: state.loadingGroup.completeFetch(),\n    };\n\n  case 'REGISTER_USER_FAILURE':\n    return {\n      ...state,\n      RegistrationSuccessful: action.result.reply,\n      error: action.result.error,\n      loadingGroup: state.loadingGroup.completeFetch(),\n    };\n\n  case 'LOG_OUT_USER':\n    return {\n      ...state,\n      loggedIn: false,\n      currentUserData: userInitialState.currentUserData,\n    };\n\n  case 'SET_INVALID_LOGIN':\n    return {\n      ...state,\n      invalidLogin: action.result,\n    };\n\n  default:\n    return state;\n  }\n};\n\nconst reducer = combineReducers({\n  cardsViewState: cardsViewReducer,\n  coursePageState: coursePageReducer,\n  filterState: filterReducer,\n  userState: userReducer,\n  errorState: errorReducer,\n  loadingState: loadingReducer,\n});\n\nexport default reducer;\n\n\n",
			"file": "src/store/Reducers.js",
			"file_size": 10840,
			"file_write_time": 131608389948854259,
			"settings":
			{
				"buffer_size": 10358,
				"line_ending": "Windows"
			}
		},
		{
			"contents": "import * as apiRequest from '../helperfunctions/ApiRequests';\nimport xslt from 'xslt';  \n\nexport const setCommentEdit = (bool) => {\n  return {\n    type: 'SET_COMMENT_EDIT',\n    action: bool,\n  };\n};\n\nexport const deleteComment = (bool, commentId) => {\n  if (bool) {\n    return {\n      types: ['GET_DELETECOMMENT_REQUEST', 'GET_DELETECOMMENT_SUCCESS', 'GET_DELETECOMMENT_FAILURE'],\n      promise: () => { \n        return apiRequest.postToAPI('course/removecomment', { commentId: commentId }) \n      },\n    };\n  }\n};\n\nexport const addFilter = (filter) => {\n  return {\n    result: filter,\n    type: 'ADD_FILTER',\n  };\n};\n\nexport const removeFilter = (filter) => {\n  return {\n    result: filter,\n    type: 'REMOVE_FILTER',\n  };\n};\n\nexport const addUserCourseScore = (courseScore) => {\n  return {\n    result: courseScore,\n    type: 'SET_USER_COURSE_SCORE',\n  };\n};\n\nexport const setValidLogin = (value) => {\n  return {\n    result: value,\n    type: 'SET_INVALID_LOGIN',\n  };\n};\n\nexport const showDepartments = (departments, query) => {\n  const matches = [];\n  if (query.length > 0) {\n    const regex = new RegExp(query, 'i');\n    for (const department of departments) {\n      if (regex.test(department.name)) {\n        matches.push(department.code);\n      }\n    }\n  }\n  return {\n    result: matches,\n    type: 'SET_DEP_VISIBLE',\n  };\n};\n\nexport const initData = () => {\n  return {\n    types: ['GET_INITDATA_REQUEST', 'GET_INITDATA_SUCCESS', 'GET_INITDATA_FAILURE'],\n    promise: async () => {\n      const departments = await apiRequest.fetchFromAPI('kthapi/departments', 'json');\n      const activeFilter = ['DM'];\n      const inactiveFilter = departments.map((item) => item.code).filter((item) => item !== activeFilter);\n      const courseListXSL = await apiRequest.fetchStatic('courselist.xsl');\n      const string = `query?srchstr=&dep='${ activeFilter }'`;\n      const courseList = await apiRequest.fetchFromAPI(`search/${ string }`);\n      return {\n        courseList: courseList,\n        departments: departments,\n        activeFilter: activeFilter,\n        inactiveFilter: inactiveFilter,\n        courseListXSL: courseListXSL,\n      };\n    },\n  };\n};\n\nexport const doSearch = (query = 'empty', filter = []) => {\n  const arrayToString = '\\'' + filter.join('\\',\\'') + '\\'';\n  const string = `query?srchstr=${ query }&dep=${ arrayToString }`;\n  return {\n    types: ['GET_SEARCH_REQUEST', 'GET_SEARCH_SUCCESS', 'GET_SEARCH_FAILURE'],\n    promise: async () => {\n      return apiRequest.fetchFromAPI(`search/${ string }`);\n    },\n  };\n};\n\nexport const getCourse = (courseCode) => {\n  return {\n    types: ['GET_COURSE_REQUEST', 'GET_COURSE_SUCCESS', 'GET_COURSE_FAILURE'],\n    promise: async () => {\n      const coursePageXSL = await apiRequest.fetchStatic('coursepage.xsl');\n      const coursePageXML = await apiRequest.fetchFromAPI(`course/${ courseCode }`);\n      const coursePage = xslt(coursePageXML, coursePageXSL);\n      return coursePage;\n    },\n  };\n};\n\nexport const validateUser = (formData) => {\n  return {\n    types: ['VALIDATE_USER_REQUEST', 'VALIDATE_USER_SUCCESS', 'VALIDATE_USER_FAILURE'],\n    promise: () => {\n      return apiRequest.postToAPI('user/validate', formData);\n    },\n  };\n};\n\nexport const registerUser = (formData) => {\n  const payload = new FormData();\n  payload.append('json', JSON.stringify(formData));\n  return {\n    types: ['REGISTER_USER_REQUEST', 'REGISTER_USER_SUCCESS', 'REGISTER_USER_FAILURE'],\n    promise: () => {\n      return apiRequest.postToAPI('user/reguser', formData);\n    },\n  };\n};\n\n\nexport const submitUserScore = (userID, courseCode, score) => {\n  return {\n    types: ['SUBMIT_SCORE_REQUEST', 'SUBMIT_SCORE_SUCCESS', 'SUBMIT_SCORE_FAILURE'],\n    promise: () => {\n      return apiRequest.postToAPI('user/submitscore', {\n        userID: userID,\n        courseCode: courseCode,\n        score: score });\n    },\n  };\n};\n\nexport const submitUserComment = (userId, courseCode, commentText) => {\n  return {\n    types: ['SUBMIT_COMMENT_REQUEST', 'SUBMIT_COMMENT_SUCCESS', 'SUBMIT_COMMENT_FAILURE'],\n    promise: () => {\n      return apiRequest.postToAPI('course/addcomment', {\n        userId: userId,\n        courseCode: courseCode,\n        commentText: commentText,\n      });\n    },\n  };\n};\n\nexport const logOut = () => {\n  return {\n    type: 'LOG_OUT_USER',\n  };\n};\n",
			"file": "src/store/Actions.js",
			"file_size": 4529,
			"file_write_time": 131608383626911135,
			"settings":
			{
				"buffer_size": 4304,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/D/Programming/Projekt/ratemycourse/backend/src/server.js",
			"settings":
			{
				"buffer_size": 14532,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
		[
			[
				[
					"Anaconda Python Builder",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				]
			],
			[
				"Anaconda Python Builder",
				""
			]
		],
		[
			[
				[
					"Packages/Markdown Preview/Markdown.sublime-build",
					""
				],
				[
					"Packages/SublimeREPL/sublimerepl_build_system_hack.sublime-build",
					""
				]
			],
			[
				"Packages/Markdown Preview/Markdown.sublime-build",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 357.0,
		"last_filter": "git ",
		"selected_items":
		[
			[
				"git ",
				"Git: Quick Add"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"git push",
				"Git: Push"
			],
			[
				"qui",
				"Git: Quick Commit"
			],
			[
				"pull",
				"Git: Pull"
			],
			[
				"push",
				"Git: Push"
			],
			[
				"quic",
				"Git: Quick Commit"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"git pull",
				"Git: Pull"
			],
			[
				"git qu",
				"Git: Quick Commit"
			],
			[
				"babel",
				"Set Syntax: JavaScript (Babel)"
			],
			[
				"babe",
				"Set Syntax: JavaScript (Babel)"
			],
			[
				"x",
				"Set Syntax: XML"
			],
			[
				"codeinte",
				"SublimeCodeIntel: Enable Live Autocompletion for Current Language"
			],
			[
				"sass",
				"Set Syntax: Sass"
			],
			[
				"remo",
				"Package Control: Remove Package"
			],
			[
				"java",
				"Set Syntax: JavaScript (Babel)"
			],
			[
				"quick",
				"Git: Quick Commit"
			],
			[
				"xml",
				"Set Syntax: XML"
			],
			[
				"php",
				"Set Syntax: PHP"
			],
			[
				"color",
				"Color Picker"
			],
			[
				"remove packa",
				"Package Control: Remove Package"
			],
			[
				"javasc",
				"Set Syntax: JavaScript (Babel)"
			],
			[
				"javas",
				"Set Syntax: JavaScript (Babel)"
			],
			[
				"javasci",
				"Set Syntax: JavaScript (Babel)"
			],
			[
				"commit",
				"Git: Commit"
			],
			[
				"insata",
				"Package Control: Install Package"
			],
			[
				"comm",
				"Git: Quick Commit"
			],
			[
				"pus",
				"Git: Push"
			],
			[
				"white",
				"Whitespace: Remove Trailing Whitespace"
			],
			[
				"Package Control: remove",
				"Package Control: Remove Package"
			],
			[
				"Package Control: di",
				"Package Control: Disable Package"
			],
			[
				"boxy",
				"Boxy Theme: Configuration"
			],
			[
				"install pa",
				"Package Control: Install Package"
			],
			[
				"git",
				"Git: Commit"
			],
			[
				"instlal",
				"Package Control: Install Package"
			],
			[
				"remove ",
				"Package Control: Remove Package"
			],
			[
				"package",
				"Package Control: Remove Package"
			],
			[
				"Package Control: isntal",
				"Package Control: Install Package"
			],
			[
				"pac",
				"Package Control: Install Package"
			],
			[
				"package insta",
				"Package Control: Install Package"
			],
			[
				"install package",
				"Package Control: Install Package"
			],
			[
				"packag",
				"Install Package Control"
			]
		],
		"width": 558.0
	},
	"console":
	{
		"height": 454.0,
		"history":
		[
			"sublime.log_commands(False)",
			"sublime.log_commands(True)",
			"\\clear",
			"clear",
			"import urllib.request,os,hashlib; h = '6f4c264a24d933ce70df5dedcf1dcaee' + 'ebe013ee18cced0ef93d5f746d80ef60'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)",
			"eslint --init",
			"eslint --init # if eslint is global",
			"which node"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/D/Programming/Projekt/ratemycourse",
		"/D/Programming/Projekt/ratemycourse/backend",
		"/D/Programming/Projekt/ratemycourse/backend/src",
		"/D/Programming/Projekt/ratemycourse/backend/src/public",
		"/D/Programming/Projekt/ratemycourse/frontend",
		"/D/Programming/Projekt/ratemycourse/frontend/src",
		"/D/Programming/Projekt/ratemycourse/frontend/src/enhancers"
	],
	"file_history":
	[
		"/D/Programming/Projekt/ratemycourse/frontend/src/enhancers/InjectCommentNumber.js",
		"/D/Programming/Projekt/ratemycourse/frontend/src/enhancers/InjectCommentEditButtons.js",
		"/D/Programming/Projekt/ratemycourse/frontend/src/components/CourseView.js",
		"/D/Programming/Projekt/ratemycourse/frontend/frontend.sublime-project",
		"/D/Programming/Projekt/ratemycourse/frontend/src/enhancers/InjectAddCommentsComponent.js",
		"/D/Programming/Projekt/ratemycourse/frontend/src/enhancers/InjectStarRating.js",
		"/D/Programming/Projekt/ratemycourse/frontend/src/store/Actions.js",
		"/D/Programming/Projekt/ratemycourse/backend/src/server.js",
		"/D/Programming/Projekt/ratemycourse/frontend/src/store/Reducers.js",
		"/D/Programming/Projekt/ratemycourse/frontend/src/enhancers/InjectAddCommentButton.js",
		"/D/Programming/Projekt/ratemycourse/frontend/src/scss/_base.scss",
		"/D/Programming/Projekt/ratemycourse/frontend/src/enhancers/ErrorScreenOnError.js",
		"/D/Programming/Projekt/ratemycourse/frontend/src/scss/Header.scss",
		"/D/Programming/Projekt/ratemycourse/frontend/src/components/Header.js",
		"/D/Programming/Projekt/ratemycourse/frontend/src/containers/MainPage.js",
		"/D/Programming/Projekt/ratemycourse/frontend/src/enhancers/InjectSubmitButton.js",
		"/D/Programming/Projekt/ratemycourse/backend/src/public/courselist.xsl",
		"/D/Programming/Projekt/ratemycourse/backend/src/public/coursepage.xsl",
		"/D/Programming/Projekt/ratemycourse/frontend/src/scss/_palette.scss",
		"/D/Programming/Projekt/ratemycourse/frontend/src/components/ControlBar.js",
		"/D/Programming/Projekt/ratemycourse/frontend/src/scss/FilterBar.scss",
		"/D/Programming/Projekt/ratemycourse/frontend/src/components/FilterSearch.js",
		"/D/Programming/Projekt/ratemycourse/frontend/src/containers/CourseListPage.js",
		"/D/Programming/Projekt/ratemycourse/frontend/node_modules/bootstrap/dist/css/bootstrap-grid.css",
		"/D/Programming/Projekt/ratemycourse/frontend/src/components/FilterBar.js",
		"/D/Programming/Projekt/ratemycourse/frontend/src/boilerplate/componentBoilerplate.js",
		"/D/Programming/Projekt/ratemycourse/frontend/src/components/CardsView.js",
		"/D/Programming/Projekt/ratemycourse/frontend/src/containers/LoginPage.js",
		"/D/Programming/Projekt/ratemycourse/frontend/src/enhancers/LoadScreenWhileLoading.js",
		"/D/Programming/Projekt/ratemycourse/frontend/src/scss/_custom.scss",
		"/D/Programming/Projekt/ratemycourse/frontend/src/containers/RegisterPage.js",
		"/D/Programming/Projekt/ratemycourse/frontend/src/scss/LoadScreenWhileLoading.scss",
		"/D/Programming/Projekt/ratemycourse/frontend/src/components/MainView.js",
		"/D/Programming/Projekt/ratemycourse/frontend/src/containers/CoursePage.js",
		"/D/Programming/Projekt/ratemycourse/frontend/src/components/CourseComments.js",
		"/D/Programming/Projekt/ratemycourse/frontend/src/components/StarRating.js",
		"/D/Programming/Projekt/ratemycourse/frontend/src/enhancers/ApplyCourseRoute.js",
		"/D/Programming/Projekt/ratemycourse/frontend/src/components/Star.js",
		"/D/Programming/Projekt/ratemycourse/frontend/src/enhancers/injectStarRating.js",
		"/D/Programming/Projekt/ratemycourse/frontend/src/App.js",
		"/D/Programming/Projekt/ratemycourse/frontend/src/scss/CourseView.scss",
		"/D/Programming/Projekt/ratemycourse/frontend/src/helperFunctions/LoadingGroup.js",
		"/C/Users/johan/Downloads/FTBInfinityServer_3.0.2/server.properties",
		"/D/Programming/Projekt/ratemycourse/frontend/src/scss/CardsView.scss",
		"/D/Programming/Projekt/ratemycourse/frontend/src/helperFunctions/ApiRequests.js",
		"/D/Programming/Projekt/ratemycourse/frontend/src/containers/MainContainer.js",
		"/D/Programming/Projekt/ratemycourse/frontend/src/containers/Course.js",
		"/D/Programming/Projekt/ratemycourse/backend/node_modules/bluebird/js/browser/bluebird.js",
		"/D/Programming/Projekt/ratemycourse/frontend/src/index.html",
		"/D/Programming/Projekt/ratemycourse/frontend/src/containers/Header.js",
		"/D/Programming/Projekt/ratemycourse/backend/src/public/coursePage.xsl",
		"/D/Programming/Projekt/ratemycourse/frontend/src/components/GenerateStars.js",
		"/D/Programming/Projekt/ratemycourse/frontend/webpack.config.js",
		"/D/Programming/Projekt/ratemycourse/frontend/src/containers/CourseContainer.js",
		"/D/Programming/Projekt/ratemycourse/frontend/src/index.js",
		"/D/Programming/Projekt/ratemycourse/frontend/devServer.js",
		"/D/Programming/Projekt/ratemycourse/backend/src/devServer.js",
		"/D/Programming/Projekt/ratemycourse/frontend/node_modules/webpack-dev-server/bin/webpack-dev-server.js",
		"/D/Programming/Projekt/ratemycourse/frontend/node_modules/webpack-dev-server/lib/Server.js",
		"/D/Programming/Projekt/ratemycourse/frontend/src/containers/Container.js",
		"/D/Programming/Projekt/ratemycourse/frontend/src/components/CourseWrapper.js",
		"/D/Programming/Projekt/ratemycourse/frontend/src/containers/Main.js",
		"/D/Programming/Projekt/ratemycourse/frontend/src/containers/Login.js",
		"/D/Programming/Projekt/ratemycourse/frontend/package.json",
		"/D/Programming/Projekt/ratemycourse/frontend/src/scss/StarRating.scss",
		"/D/Programming/Projekt/ratemycourse/frontend/src/components/LoadScreenWhileLoading.js",
		"/D/Programming/Projekt/ratemycourse/frontend/node_modules/recompose/lifecycle.js",
		"/D/Programming/Projekt/ratemycourse/frontend/node_modules/jquery-bar-rating/jquery.barrating.js",
		"/D/Programming/Projekt/ratemycourse/frontend/src/scss/_fonts.scss",
		"/D/Programming/Projekt/ratemycourse/frontend/node_modules/bootstrap/scss/_variables.scss",
		"/D/Programming/Projekt/ratemycourse/frontend/src/components/Login.js",
		"/D/Programming/Projekt/ratemycourse/frontend/node_modules/bootstrap/scss/_media.scss",
		"/D/Programming/Projekt/ratemycourse/frontend/node_modules/bootstrap/scss/_print.scss",
		"/D/Programming/Projekt/ratemycourse/frontend/node_modules/bootstrap/scss/_type.scss",
		"/D/Programming/Projekt/ratemycourse/frontend/src/scss/Login.scss",
		"/D/Programming/Projekt/ratemycourse/frontend/node_modules/bootstrap/scss/_forms.scss",
		"/D/Programming/Projekt/ratemycourse/frontend/node_modules/bootstrap/scss/bootstrap.scss",
		"/C/Users/johan/AppData/Roaming/Sublime Text 3/Packages/SublimeCodeIntel/SublimeCodeIntel.sublime-settings",
		"/D/Programming/Projekt/ratemycourse/frontend/src/scss/CourseCard.scss",
		"/D/Programming/Projekt/ratemycourse/frontend/src/components/CourseCard.js",
		"/D/Programming/Projekt/ratemycourse/frontend/src/components/InputBox.js",
		"/D/Programming/Projekt/ratemycourse/frontend/src/scss/Main.scss",
		"/D/Programming/Projekt/ratemycourse/frontend/src/components/Register.js",
		"/D/Programming/Projekt/hundskalle/src/scss",
		"/D/Programming/Projekt/hundskalle/webpack.config.js",
		"/D/Programming/Projekt/hundskalle/package.json",
		"/D/Programming/Projekt/hundskalle/src/_custom.scss",
		"/D/Programming/Projekt/hundskalle/src/index.js",
		"/D/Programming/Projekt/ratemycourse/frontend/src/components/SearchBar.js",
		"/D/Programming/Projekt/ratemycourse/frontend/src/store/CreateStore.js",
		"/D/Programming/Projekt/ratemycourse/frontend/src/components/CardsView.css",
		"/D/Programming/Projekt/ratemycourse/frontend/src/components/FilterBar.css",
		"/D/Programming/Projekt/ratemycourse/frontend/src/containers/CardsContainer.js",
		"/D/Programming/Projekt/ratemycourse/frontend/src/components/Main.js",
		"/D/Programming/Projekt/ratemycourse/frontend/src/store/PromiseMiddleware.js",
		"/D/Programming/Projekt/ratemycourse/frontend/src/helperFunctions/ParseCourseXML.js",
		"/D/Programming/Projekt/ratemycourse/frontend/src/helperFunctions/CoursesXMLsplit.js",
		"/C/Users/johan/Downloads/FTBHorizonsIIIServer_1.4.0/server.properties",
		"/C/Users/johan/Downloads/Project_Ozone_2-Server-v.2.4.0/server.properties",
		"/D/Programming/Projekt/ratemycourse/frontend/src/components/Header.css",
		"/D/Programming/Projekt/ratemycourse/backend/src/public/departmentlist.xsl",
		"/C/Users/johan/AppData/Local/Temp/7zEC9242ECC/coffeeresponsibility.php",
		"/C/Users/johan/Google Drive/Skola/XML for Publishing/Lab2/lab-xslt/nyheter.xml",
		"/C/Users/johan/Google Drive/Skola/XML for Publishing/Lab2/lab-xslt/nyheter-wml.xsl",
		"/C/Users/johan/AppData/Local/Temp/7zEC92477AF/coffeeresponsibility.php",
		"/D/Programming/Projekt/ratemycourse/frontend/src/components/Main.css",
		"/D/Programming/Projekt/ratemycourse/frontend/src/components/Card.css",
		"/D/Programming/Projekt/redux tutorial/redux-tutorial/05_combine-reducers.js",
		"/D/Programming/Projekt/ratemycourse/backend/JSONS/DD.json",
		"/D/Programming/Projekt/ratemycourse/frontend/src/components/LoadScreenWhileLoading.css",
		"/D/Programming/Projekt/ratemycourse/frontend/src/components/SearchBar.css",
		"/D/Programming/Projekt/ratemycourse/frontend/src/components/CardView.css",
		"/D/Programming/Projekt/ratemycourse/frontend/.babelrc",
		"/D/Programming/Projekt/ratemycourse/frontend/src/components/CardView.js",
		"/D/Programming/Projekt/ratemycourse/frontend/src/containers/CardScreen.js",
		"/D/Programming/Projekt/ratemycourse/frontend/src/services/FetchCourses.js",
		"/D/Programming/Projekt/ratemycourse/backend/.eslintrc.js",
		"/D/Programming/Projekt/ratemycourse/frontend/eslint/common.js",
		"/D/Programming/Projekt/ratemycourse/backend/eslint/common.js",
		"/D/Programming/Projekt/ratemycourse/backend/eslint/react.js",
		"/D/Programming/Projekt/ratemycourse/backend/package.json",
		"/D/Programming/Projekt/ratemycourse/frontend/src/actions/fetchCourses.js",
		"/D/Programming/Projekt/ratemycourse/frontend/src/store/courses/Actions.js",
		"/D/Programming/Projekt/ratemycourse/frontend/src/store/courses/ActionTypes.js",
		"/D/Programming/Projekt/ratemycourse/frontend/src/store/courses/reducer.js",
		"/D/Programming/Projekt/ratemycourse/frontend/src/components/App.js",
		"/D/Programming/Projekt/ratemycourse/frontend/src/components/CardAnimation.js",
		"/D/Programming/Projekt/ratemycourse/frontend/src/components/Card.js"
	],
	"find":
	{
		"height": 51.0
	},
	"find_in_files":
	{
		"height": 141.0,
		"where_history":
		[
			"D:\\Programming\\Projekt\\ratemycourse\\frontend\\src",
			"<open files>",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"alertLogin",
			"setCommentEdit",
			"onEditComment",
			"none",
			"flex",
			"userReducer",
			"course",
			"console.log",
			"TiHome",
			"white",
			"outline",
			"Outline",
			"outline",
			"Outline",
			"outline",
			"Outline",
			"outline",
			"secondaryColor",
			"tetriaryColor",
			"{ colors.tetriaryColor }",
			"}\n",
			"outline",
			"10px",
			"outline",
			"Component",
			"userScore",
			"link",
			"starrating.scss",
			"starrating",
			"false",
			"match",
			"xslt",
			"tetriary",
			"console.log",
			"apiRequest",
			"LoadingGroup.",
			"LoadingGroup",
			"state.loadingGroup",
			"loading",
			"props",
			"this.",
			"var",
			"(?-i)courses",
			"courses?-i",
			"courses(?i)",
			"courses(?-i)",
			"/courses/",
			"courses",
			"console.log",
			"profileButton",
			"inline",
			"\""
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"CourseComments",
			"score",
			"state.loadingGroup.",
			"state.loadingGroup",
			"LoadingGroup",
			"loadingGroup",
			"this.props",
			"",
			"courseList",
			"'"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": true,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 2,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "/D/Programming/Projekt/ratemycourse/backend/src/public/coursepage.xsl",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5438,
						"regions":
						{
						},
						"selection":
						[
							[
								4783,
								4783
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": 35,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
									"1":
									[
										4798,
										4799
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/double_quote.png",
										"region.greenish"
									]
								},
								"open":
								{
									"1":
									[
										4778,
										4779
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content"
							],
							"git_gutter_is_enabled": true,
							"syntax": "Packages/XML/XML.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1755.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "src/enhancers/InjectAddCommentsComponent.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 949,
						"regions":
						{
						},
						"selection":
						[
							[
								195,
								195
							]
						],
						"settings":
						{
							"auto_complete": false,
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
									"1":
									[
										703,
										704
									],
									"2":
									[
										497,
										498
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/round_bracket.png",
										"region.yellowish"
									],
									"2":
									[
										"Packages/BracketHighlighter/icons/double_quote.png",
										"region.greenish"
									]
								},
								"open":
								{
									"1":
									[
										317,
										318
									],
									"2":
									[
										484,
										485
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content"
							],
							"git_gutter_is_enabled": true,
							"syntax": "Packages/Babel/JavaScript (Babel).tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "src/enhancers/InjectCommentEditButtons.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1552,
						"regions":
						{
						},
						"selection":
						[
							[
								804,
								804
							]
						],
						"settings":
						{
							"auto_complete": false,
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
									"1":
									[
										1308,
										1309
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/round_bracket.png",
										"region.yellowish"
									]
								},
								"open":
								{
									"1":
									[
										555,
										556
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										1309,
										1310
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/round_bracket.png",
										"region.yellowish"
									]
								},
								"open":
								{
									"1":
									[
										555,
										556
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content"
							],
							"git_gutter_is_enabled": true,
							"syntax": "Packages/Babel/JavaScript (Babel).tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "/D/Programming/Projekt/ratemycourse/backend/src/public/courselist.xsl",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1981,
						"regions":
						{
						},
						"selection":
						[
							[
								1028,
								1028
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
									"1":
									[
										996,
										999
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/tag.png",
										"region.orangish"
									]
								},
								"open":
								{
									"1":
									[
										955,
										958
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										1028,
										1029
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/double_quote.png",
										"region.greenish"
									]
								},
								"open":
								{
									"1":
									[
										994,
										995
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"git_gutter_is_enabled": true,
							"syntax": "Packages/XML/XML.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 195.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "src/components/CardsView.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 822,
						"regions":
						{
						},
						"selection":
						[
							[
								406,
								406
							]
						],
						"settings":
						{
							"auto_complete": false,
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content"
							],
							"git_gutter_is_enabled": true,
							"syntax": "Packages/Babel/JavaScript (Babel).tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "src/containers/CoursePage.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4192,
						"regions":
						{
						},
						"selection":
						[
							[
								1956,
								1956
							]
						],
						"settings":
						{
							"auto_complete": false,
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
									"1":
									[
										4108,
										4109
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/round_bracket.png",
										"region.yellowish"
									]
								},
								"open":
								{
									"1":
									[
										4062,
										4063
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										2204,
										2205
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"region.purplish"
									]
								},
								"open":
								{
									"1":
									[
										761,
										762
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content"
							],
							"git_gutter_is_enabled": true,
							"syntax": "Packages/Babel/JavaScript (Babel).tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 255.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"type": "text"
				}
			]
		},
		{
			"selected": 2,
			"sheets":
			[
				{
					"buffer": 6,
					"file": "src/store/Reducers.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 10358,
						"regions":
						{
						},
						"selection":
						[
							[
								8916,
								8916
							]
						],
						"settings":
						{
							"auto_complete": false,
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
									"1":
									[
										8941,
										8942
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"region.purplish"
									]
								},
								"open":
								{
									"1":
									[
										8878,
										8879
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										8941,
										8942
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/square_bracket.png",
										"region.bluish"
									]
								},
								"open":
								{
									"1":
									[
										8878,
										8879
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content"
							],
							"git_gutter_is_enabled": true,
							"syntax": "Packages/Babel/JavaScript (Babel).tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 5625.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "src/store/Actions.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4304,
						"regions":
						{
						},
						"selection":
						[
							[
								3932,
								3932
							]
						],
						"settings":
						{
							"auto_complete": false,
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
									"1":
									[
										4281,
										4282
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"region.purplish"
									]
								},
								"open":
								{
									"1":
									[
										4118,
										4119
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										4225,
										4226
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"region.purplish"
									]
								},
								"open":
								{
									"1":
									[
										3931,
										3932
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content"
							],
							"git_gutter_is_enabled": true,
							"syntax": "Packages/Babel/JavaScript (Babel).tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1645.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "/D/Programming/Projekt/ratemycourse/backend/src/server.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 14532,
						"regions":
						{
						},
						"selection":
						[
							[
								14023,
								14023
							]
						],
						"settings":
						{
							"auto_complete": false,
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										14057,
										14058
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"region.purplish"
									]
								},
								"open":
								{
									"1":
									[
										13992,
										13993
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"git_gutter_is_enabled": true,
							"syntax": "Packages/Babel/JavaScript (Babel).tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2547.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 50.0
	},
	"input":
	{
		"height": 47.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			]
		],
		"cols":
		[
			0.0,
			0.519334993029,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.SQLTools Result":
	{
		"height": 513.0
	},
	"output.exec":
	{
		"height": 332.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.git-commit":
	{
		"height": 103.0
	},
	"output.git-pull":
	{
		"height": 130.0
	},
	"output.git-push":
	{
		"height": 106.0
	},
	"output.markdown":
	{
		"height": 148.0
	},
	"output.mdpopups":
	{
		"height": 0.0
	},
	"pinned_build_system": "Packages/User/xml.sublime-build",
	"project": "frontend.sublime-project",
	"replace":
	{
		"height": 96.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"createprojectfr",
				"src\\client\\stores\\MultiStep\\CreateProjectFormStore.js"
			],
			[
				"date",
				"src\\client\\components\\forms\\DateInput.js"
			],
			[
				"dateinp",
				"src\\client\\components\\forms\\DateInput.js"
			],
			[
				"stepsetprojectend",
				"src\\client\\pages\\CreateProjectPage\\steps\\StepSetProjectEnd.js"
			],
			[
				"setstart",
				"src\\client\\pages\\CreateProjectPage\\steps\\StepSetProjectStart.js"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"D:\\Programming\\DatabasLabbar\\databaslabbar.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": false,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 315.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
